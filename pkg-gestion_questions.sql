create or replace PACKAGE GESTION_QUESTIONS AS 

  TYPE QUESTION_ENR IS REF CURSOR;
  
  TYPE QUESTION_REP IS REF CURSOR;
  
  PROCEDURE INIT_POSEE;
  
  PROCEDURE INSERER_QUESTION(
    ENONCE IN QUESTIONS.ENONCEQUESTION%TYPE, 
    CATEGORIE IN QUESTIONS.CODECATEGORIE%TYPE, 
    IDQUESTION OUT QUESTIONS.NUMQUESTION%TYPE);
    
  PROCEDURE INSERER_REPONSE(
    NUMQUESTION IN QUESTIONS.NUMQUESTION%TYPE, 
    DESCRIPTION IN REPONSES.DESCRIPTION%TYPE, 
    ESTBONNE IN REPONSES.ESTBONNE%TYPE);

  FUNCTION GENERATE_QUESTION(PCODECAT IN CATEGORIES.CODECATEGORIE%TYPE) RETURN QUESTION_ENR;
  
  FUNCTION FETCH_REPONSE_QUESTION(
    PNUMQUESTION IN QUESTIONS.NUMQUESTION%TYPE) 
    RETURN QUESTION_REP;
  
  FUNCTION VALIDER_REPONSE(
    PNUMQUESTION IN QUESTIONS.NUMQUESTION%TYPE, 
    PNUMREPONSE IN REPONSES.NUMREPONSE%TYPE) 
    RETURN QUESTION_ENR;

END GESTION_QUESTIONS;




create or replace PACKAGE BODY GESTION_QUESTIONS AS

  FUNCTION GENERATE_QUESTION(PCODECAT IN CATEGORIES.CODECATEGORIE%TYPE) RETURN QUESTION_ENR AS
  QUESTION QUESTION_ENR;
  NUMQ QUESTIONS.NUMQUESTION%TYPE;
  BEGIN
    SELECT NUMQUESTION INTO NUMQ FROM (SELECT NUMQUESTION  FROM QUESTIONS WHERE CODECATEGORIE = pcodecat AND POSEE = 'n' ORDER BY DBMS_RANDOM.VALUE) WHERE ROWNUM = 1;
    OPEN QUESTION FOR SELECT * FROM QUESTIONS WHERE NUMQUESTION = NUMQ;
    UPDATE QUESTIONS SET POSEE = 'o' WHERE NUMQUESTION = NUMQ;
    COMMIT;
    RETURN QUESTION;
  END GENERATE_QUESTION;

  FUNCTION FETCH_REPONSE_QUESTION(PNUMQUESTION IN QUESTIONS.NUMQUESTION%TYPE) RETURN QUESTION_REP AS
  REPONSES QUESTION_REP;
  BEGIN
    OPEN REPONSES FOR SELECT NUMREPONSE, DESCRIPTION, ESTBONNE, Q.NUMQUESTION, ENONCEQUESTION FROM REPONSES R INNER JOIN QUESTIONS Q ON R.NUMQUESTION = Q.NUMQUESTION WHERE Q.NUMQUESTION = PNUMQUESTION  ORDER BY DBMS_RANDOM.VALUE;
    RETURN REPONSES;
  END FETCH_REPONSE_QUESTION;
  
  PROCEDURE INIT_POSEE AS 
  BEGIN
    UPDATE QUESTIONS SET POSEE = 'n';
    COMMIT;
  END;
  
  PROCEDURE INSERER_QUESTION(ENONCE IN QUESTIONS.ENONCEQUESTION%TYPE, CATEGORIE IN QUESTIONS.CODECATEGORIE%TYPE, IDQUESTION OUT QUESTIONS.NUMQUESTION%TYPE) AS
  BEGIN 
    INSERT INTO QUESTIONS VALUES (QUESTION_SEQ.NEXTVAL, ENONCE, 'n', CATEGORIE);
    SELECT QUESTION_SEQ.CURRVAL INTO IDQUESTION FROM DUAL;
    COMMIT;
  END INSERER_QUESTION;
  
  PROCEDURE INSERER_REPONSE(NUMQUESTION IN QUESTIONS.NUMQUESTION%TYPE, DESCRIPTION IN REPONSES.DESCRIPTION%TYPE, ESTBONNE IN REPONSES.ESTBONNE%TYPE) AS
  BEGIN
    INSERT INTO REPONSES VALUES (REPONSE_SEQ.NEXTVAL, DESCRIPTION, ESTBONNE, NUMQUESTION);
    COMMIT;
  END INSERER_REPONSE;
  
    FUNCTION VALIDER_REPONSE(PNUMQUESTION IN QUESTIONS.NUMQUESTION%TYPE, PNUMREPONSE IN REPONSES.NUMREPONSE%TYPE) RETURN QUESTION_ENR AS
    BONNE_REPONSE QUESTION_ENR;
    BEGIN
      open BONNE_REPONSE for select ESTBONNE FROM REPONSES WHERE NUMQUESTION = PNUMQUESTION AND numreponse = PNUMREPONSE;
      return bonne_reponse;
    END;



END GESTION_QUESTIONS;